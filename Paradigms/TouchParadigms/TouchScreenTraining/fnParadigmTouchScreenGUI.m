function fnParadigmTouchScreenGUI() 
%
% Copyright (c) 2008 Shay Ohayon, California Institute of Technology.
% This file is a part of a free software. you can redistribute it and/or modify
% it under the terms of the GNU General Public License as published by
% the Free Software Foundation (see GPL.txt)

global g_strctParadigm   
    
[hParadigmPanel, iPanelHeight, iPanelWidth] = fnCreateParadigmPanel();
strctControllers.m_hPanel = hParadigmPanel;
strctControllers.m_iPanelHeight = iPanelHeight;
strctControllers.m_iPanelWidth = iPanelWidth;



strctControllers = fnAddTextSliderEditComboSmallWithCallback(strctControllers, 40+30*0, ...
     'Juice Time (ms):', 'JuiceTimeMS',  0, 100, [1 5], fnTsGetVar(g_strctParadigm,'JuiceTimeMS'));

strctControllers = fnAddTextSliderEditComboSmallWithCallback(strctControllers, 60+30*1, ...
     'Max Num Trials:', 'MaxNumTrials',  0, 5000, [1 10], fnTsGetVar(g_strctParadigm,'MaxNumTrials'));
strctControllers = fnAddTextSliderEditComboSmallWithCallback(strctControllers, 60+30*2, ...
     'ITI minimum (sec):', 'InterTrialIntervalMinSec',  0, 60, [1 5], fnTsGetVar(g_strctParadigm,'InterTrialIntervalMinSec'));
strctControllers = fnAddTextSliderEditComboSmallWithCallback(strctControllers, 60+30*3, ...
     'ITI maximum (sec):', 'InterTrialIntervalMaxSec',  0, 60, [1 5], fnTsGetVar(g_strctParadigm,'InterTrialIntervalMaxSec'));
strctControllers = fnAddTextSliderEditComboSmallWithCallback(strctControllers, 60+30*4, ...
     'Trial timeout (sec):', 'TrialTimeOutSec',  0, 10, [1 5], fnTsGetVar(g_strctParadigm,'TrialTimeOutSec'));

strctControllers = fnAddTextSliderEditComboSmallWithCallback(strctControllers, 80+30*5, ...
     'Correct Distance (pix):', 'CorrectDistancePix',  0, 300, [1 5], fnTsGetVar(g_strctParadigm,'CorrectDistancePix'));

 strctControllers = fnAddTextSliderEditComboSmallWithCallback(strctControllers, 80+30*6, ...
     'Spot Radius (pix):', 'SpotRadius',  0, 300, [1 5], fnTsGetVar(g_strctParadigm,'SpotRadius'));
 
strctControllers.m_hTrialOnsetAudio = uicontrol('Style','pushbutton','String','Reset Statistics',...
    'Position',[10 100 140 25],'HorizontalAlignment','Left','Parent',...
   hParadigmPanel,'Callback',[g_strctParadigm.m_strCallbacks,'(''ResetStat'');']);
 
strctControllers.m_hTrialOnsetAudio = uicontrol('Style','checkbox','String','Play Trial Onset',...
    'Position',[10 20 140 15],'HorizontalAlignment','Left','Parent',...
   hParadigmPanel,'Callback',[g_strctParadigm.m_strCallbacks,'(''ToggleTrialOnsetAudio'');'],'value',...
    g_strctParadigm.m_bPlayTrialOnset);
strctControllers.m_hTrialTimeoutAudio = uicontrol('Style','checkbox','String','Play Trial Timeout',...
    'Position',[10 40 140 15],'HorizontalAlignment','Left','Parent',...
   hParadigmPanel,'Callback',[g_strctParadigm.m_strCallbacks,'(''ToggleTrialTimeoutAudio'');'],'value',...
    g_strctParadigm.m_bPlayTrialTimeout);

strctControllers.m_hCorrectTrialAudio= uicontrol('Style','checkbox','String','Play Correct Trial',...
    'Position',[160 20 140 15],'HorizontalAlignment','Left','Parent',...
   hParadigmPanel,'Callback',[g_strctParadigm.m_strCallbacks,'(''ToggleCorrectTrialAudio'');'],'value',...
    g_strctParadigm.m_bPlayCorrect);

strctControllers.m_hIncorrectTrialAudio= uicontrol('Style','checkbox','String','Play Incorrect Trial',...
    'Position',[160 40 140 15],'HorizontalAlignment','Left','Parent',...
   hParadigmPanel,'Callback',[g_strctParadigm.m_strCallbacks,'(''ToggleIncorrectTrialAudio'');'],'value',...
    g_strctParadigm.m_bPlayIncorrect);

strctControllers.m_hMonkeyInitiatesTrials = uicontrol('Style','checkbox','String','Monkey Initiates Trials',...
    'Position',[10 60 140 15],'HorizontalAlignment','Left','Parent',...
   hParadigmPanel,'Callback',[g_strctParadigm.m_strCallbacks,'(''ToggleMonkeyStartTrials'');'],'value',...
    g_strctParadigm.m_bMonkeyInitiatesTrials);

strctControllers.m_hMultipleAttempts = uicontrol('Style','checkbox','String','Multiple Attempts',...
    'Position',[160 60 140 15],'HorizontalAlignment','Left','Parent',...
   hParadigmPanel,'Callback',[g_strctParadigm.m_strCallbacks,'(''ToggleMultipleAttempts'');'],'value',...
    g_strctParadigm.m_bMultipleAttempts);





g_strctParadigm.m_strctControllers = strctControllers;
return;
